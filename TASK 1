// Print odd numbers in an array
const printOddNumbers = (arr => {
    arr.forEach(num => {
        if (num % 2 !== 0) {
            console.log(num);
        }
    });
})([1, 2, 3, 4, 5, 6, 7, 8, 9]);

// Convert all the strings to title caps in a string array
const titleCaps = (arr => {
    return arr.map(str => {
        return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();
    });
})(["hello", "world", "javascript"]);

// Sum of all numbers in an array
const sumOfNumbers = (arr => {
    return arr.reduce((acc, curr) => acc + curr, 0);
})([1, 2, 3, 4, 5]);

// Return all the prime numbers in an array
const getPrimeNumbers = (arr => {
    const isPrime = num => {
        if (num <= 1) return false;
        if (num <= 3) return true;
        if (num % 2 === 0 || num % 3 === 0) return false;
        let i = 5;
        while (i * i <= num) {
            if (num % i === 0 || num % (i + 2) === 0) return false;
            i += 6;
        }
        return true;
    };
    return arr.filter(num => isPrime(num));
})([1, 2, 3, 4, 5, 6, 7, 8, 9]);

// Return all the palindromes in an array
const getPalindromes = (arr => {
    const isPalindrome = str => {
        const len = str.length;
        for (let i = 0; i < len / 2; i++) {
            if (str[i] !== str[len - 1 - i]) {
                return false;
            }
        }
        return true;
    };
    return arr.filter(str => isPalindrome(str));
})(["madam", "hello", "level", "world"]);

// Return median of two sorted arrays of the same size
const getMedian = ((arr1, arr2) => {
    const mergedArr = arr1.concat(arr2);
    const sortedArr = mergedArr.sort((a, b) => a - b);
    const len = sortedArr.length;
    if (len % 2 === 0) {
        return (sortedArr[len / 2 - 1] + sortedArr[len / 2]) / 2;
    } else {
        return sortedArr[Math.floor(len / 2)];
    }
})([1, 3, 5], [2, 4, 6]);

// Remove duplicates from an array
const removeDuplicates = (arr => {
    return Array.from(new Set(arr));
})([1, 2, 2, 3, 4, 4, 5]);

// Rotate an array by k times
const rotateArray = ((arr, k) => {
    const rotatedArr = arr.slice(k % arr.length).concat(arr.slice(0, k % arr.length));
    console.log(rotatedArr);
})([1, 2, 3, 4, 5], 2);
